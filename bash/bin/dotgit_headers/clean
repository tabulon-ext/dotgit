#! /bin/bash

function clean_home_fast
{
	verecho "\nInitiating home cleanup"
	# shellcheck disable=SC2164
	cd "$HOME"

	local del
	for f in "${FN[@]}"; do
		del=0

		[ -h "$f" ] && [[ $(readlink "$f") =~ ^$REPO ]] && del=1
		[[ $1 == "nosym" ]] && [ -f "$f" ] && del=1

		[[ $del -ne 1 ]] && continue

		verecho "Removing \"$f\""
		rm "$f"
	done
}

function clean_repo
{
	verecho "\nInitiating repo cleanup"

	verecho "Cleaning dotfiles folder"
	clean_repo_folder "$DG_DFDIR"
	verecho "Cleaning dmz folder"
	clean_repo_folder "$DG_DMZ"
}

function clean_repo_folder
{
	if ! cd "$REPO/$1"; then
		echo "Unable to enter $1 directory"
		exit 1
	fi

	IFS=$'\n'
	while read -r fl; do
		[ ! "$fl" ] && break

		local c=${fl%%/*}
		local f=${fl#*/}
		f=${f%\.hash}

		local found=0

		local index=0
		for fns in "${FN[@]}"; do
			if [[ $fns == "$f" ]]; then
				IFS=$','
				for cts in ${FC[$index]}; do
					if [[ $cts == "$c" ]]; then
						found=1;
						break;
					fi
				done
				unset cts

				[[ $found -eq 1 ]] && break
			fi

			index=$((index + 1))
		done
		unset fns

		if [[ $found -ne 1 ]]; then
			verecho "$(levecho 1 "Removing $fl")"
			rm "$fl"
		fi

	done <<< "$(find . -not -type d | cut -c 3-)"
	unset fl

	verecho "$(levecho 1 "Removing empty directories")"
	find . -type d -empty -delete
}

[[ ! $DG_START ]] && echo "Do not source this directly, it is used by dotgit"
